# vim:ft=ruby

require 'yaml'

current_dir = File.dirname(File.expand_path(__FILE__))
configs     = YAML.load_file("#{current_dir}/misc/global-vars.yml")

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.synced_folder ".", "/vagrant", :nfs => true

  # CONTROLLER
  config.vm.define "controller" do |vb|
    vb.vm.box = "centos/7"

    vb.vm.provider :libvirt do |domain|
      domain.memory = 4096
      domain.cpus = 4
      domain.nested = true
    end
    
    # mgmt net
    vb.vm.network :private_network, :libvirt__adapter => 1, :ip => configs['controller_mgmt_ip']

    # set tunnel network if network is on controller node
    if configs['controller_mgmt_ip'].eql? configs['network_mgmt_ip']
      # tunnel net
      vb.vm.network :private_network, :libvirt__adapter => 2, :ip => configs['network_tun_ip']
    end

    config.vm.provision "ansible" do |ansible|
      ansible.extra_vars = { ansible_ssh_user: 'vagrant' }
      ansible.playbook = "play-controller.yml"
    end

  end

  # NETWORK (unless already on CONTROLLER)
  unless configs['controller_mgmt_ip'].eql? configs['network_mgmt_ip']
    config.vm.define "network" do |vb|
      vb.vm.box = "centos/7"

      vb.vm.provider :libvirt do |domain|
        domain.memory = 2048 
        domain.cpus = 2 
        domain.nested = true
      end 

      # mgmt net
      vb.vm.network :private_network, :libvirt__adapter => 1, :ip => configs['network_mgmt_ip']
      # tunnel net
      vb.vm.network :private_network, :libvirt__adapter => 2, :ip => configs['network_tun_ip']

      config.vm.provision "ansible" do |ansible|
        ansible.extra_vars = { ansible_ssh_user: 'vagrant' }
        ansible.playbook = "play-network.yml"
      end 
    end
  end

  # COMPUTE NODES
  (1..configs['compute_nodes']).each do |i|
    config.vm.define "compute#{i}" do |vb|
      vb.vm.box = "centos/7"
      vb.vm.provider :libvirt do |domain|
        domain.memory = 4096
        domain.cpus = 4
        domain.nested = true
      end

      # mgmt net
      vb.vm.network :private_network, :libvirt__adapter => 1, :ip => configs["compute#{i}_mgmt_ip"]
      # tun net
      vb.vm.network :private_network, :libvirt__adapter => 2, :ip => configs["compute#{i}_tun_ip"]

      config.vm.provision "ansible" do |ansible|
        ansible.extra_vars = { ansible_ssh_user: 'vagrant' }
        ansible.playbook = "play-compute.yml"
      end
    end
  end

end
